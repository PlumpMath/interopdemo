;; -*- coding: utf-8-unix -*-
;; Automatically written history of nREPL session
;; Edit at your own risk

("(set! (.out (new LoggerFactory \"name1\")) *out*)" "(set! (.name (new LoggerFactory \"name1\")) \"eek\")" "(set! (.name LoggerFactory) \"eek\")" "(.name LoggerFactory)" "(new LoggerFactory \"wot\")" "(in-ns 'interopdemo.core)" "(new Logger \"noo\")" "(doc set!)" "(macroexpand-1 ' (doto (make-logger)
    (.logMessage message)
    (.setLogDestination (create-debug-destination))
    (.logArbitrary logger (java.util.HashMap. {\"oil-levels-check\" 1 \"debug\" \"Hello\"}))))" "(doc doto)" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(macroexpand '(.. (new LoggerFactory \"RAMSGATE-DEPO\")  (withOutBoundTo *out*) (withConfig (HasMap.))))" "(macroexpand '(.. (new LoggerFactory \"RAMSGATE-DEPO\")  (withOutBoundTo *out*)))" "(use 'interopdemo.core :reload)" "(macroexpand '(.. (new LoggerFactory \"RAMSGATE-DEPO\")  (withOutBoundTo *out*)))" "(doc ..)" "(macroexpand-1 '(.. (new LoggerFactory \"RAMSGATE-DEPO\")  (withOutBoundTo *out*)))" "(macroexpand-1 (.. (new LoggerFactory \"RAMSGATE-DEPO\")  (withOutBoundTo *out*)))" "(in-ns 'interopdemo.core)" "(in-ins 'interopdemo.core)" "(macroexpand-1 (.. (new LoggerFactory \"RAMSGATE-DEPO\")  (withOutBoundTo *out*)))" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(doc reify)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(instance? java.io.Writer *out*)" "(log-oil-levels [1 5 2 53] \"foo\")" "(use 'interopdemo.core :reload)" "(use 'interopdemo.core)" "(log-oil-levels [500 100 200 100] \"bob-tanker\")" "(use 'interopdemo.core :reload)" "(Integer/toString 2)" "(class (int 20))" "(class 1100)" "(class [500 100 200])" "(log-oil-levels [500 100 200 100] \"bob-tanker\")" "(use 'interopdemo.core :reload)" "(source time)" "(now)" "(date)" "(use 'interopdemo.core :reload)" "(doc import)" "(use 'interopdemo.core :reload)" "(use 'interopdemo.core)" "(System/getProperty \"java.vm.version\")" "(dir String)" "(macroexpand-1 '(LoggerFactory. \"\"))" "(macroexpand-1 (LoggerFactory. \"\"))" "(new LoggerFactory \"\")" "(in-ns 'interopdemo.core)" "(new LoggerFactory \"\")" "(use 'interopdemo.core)")